# Workflow for testing meshpy
name: Test meshpy

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  workflow_dispatch:
    type: choice

env:
  # Indicated the testing script, that it is performed on GitHub. In this
  # case all test have to pass.
  TESTING_GITHUB: 1
  # Some tests require the 4C executable to check if the created input file
  # works with 4C.
  FOUR_C_BUILD: /home_local/github-runner/testing_lib/four_c_master/release
  FOUR_C_RELEASE: /home_local/github-runner/testing_lib/four_c_master/release/4C
  # Python executable and virtual environment name
  PYTHON_EXE: python3
  PYTHON_VENV: python-testing-environment
  # Meshpy can interact with cubitpy, to perform the corresponding tests,
  # the following paths have to be set
  CUBITPY_REPO: /home_local/github-runner/testing_lib/cubitpy_main
  FOUR_C_PRE_EXODUS: /home_local/github-runner/testing_lib/four_c_master/release/pre_exodus
  CUBIT_ROOT: /imcs/public/compsim/opt/cubit-15.2
  # The python version for testing is provided via spack
  SPACK_ACTIVATION_SCRIPT: /home_local/github-runner/testing_lib/spack/share/spack/setup-env.sh

jobs:
  meshpy-testing:
    name: meshpy-testing
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Test meshpy
        run: |
          whoami
          pwd
          MESHPY_PATH=$(pwd)
          echo $FOUR_C_RELEASE
          # Load the python interpreter
          . ${SPACK_ACTIVATION_SCRIPT}
          spack load python@3.12.1
          # Create the virtual environment
          ${PYTHON_EXE} -m venv ${PYTHON_VENV}
          source ${PYTHON_VENV}/bin/activate
          # We have to update pip, otherwise there is a bug in the compilation of the cython code
          pip install --upgrade pip
          # Install meshpy
          pip install .[CI-CD]
          # Check git configuration
          git config --list
          # Install cubitpy
          cd $CUBITPY_REPO
          git checkout main
          git pull
          pip install .
          cd $MESHPY_PATH
          # Print information on the python environment
          python --version
          pip list
          # Run tests
          cd tests
          coverage run --rcfile=coverage.config testing_main.py
          coverage html
          coverage report
          coverage-badge -o htmlcov/coverage.svg
          # Check codestyle
          cd $MESHPY_PATH
          black . --check --exclude="${PYTHON_VENV}" && exit 0
          # If we did not exit earlier, raise an error here
          exit 1
          ls

  performance-test:
    name: meshpy-performance-testing
    runs-on: self-hosted
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Performace test
        run: |
          whoami
          pwd
          MESHPY_PATH=$(pwd)
          # Load the python interpreter
          . ${SPACK_ACTIVATION_SCRIPT}
          spack load python@3.12.1
          # Create the virtual environment
          ${PYTHON_EXE} -m venv ${PYTHON_VENV}
          source ${PYTHON_VENV}/bin/activate
          # We have to update pip, otherwise there is a bug in the compilation of the cython code
          pip install --upgrade pip
          # Install meshpy
          pip install .
          # Install cubitpy
          cd $CUBITPY_REPO
          git pull
          pip install .
          cd $MESHPY_PATH
          # Print information on the python environment
          python --version
          pip list
          # Run performance tests
          cd tests
          python3 performance_testing.py
